# Install dependencies only when needed
FROM node:18-alpine3.15 AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy neccesary files
COPY package.json yarn.lock ./
COPY ./.next ./.next
COPY ./package.json ./
COPY ./next.config.js ./
COPY ./.env.production ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Build the app with cache dependencies
FROM node:18-alpine3.15 AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN yarn build


# Production image, copy all the files and run the app
FROM node:18-alpine3.15 AS runner

# Set working directory
WORKDIR /usr/src/app

# Copy neccesary files
COPY package.json yarn.lock ./
COPY ./.next ./.next
COPY ./package.json ./
COPY ./next.config.js ./
COPY ./.env.production ./

RUN yarn install --prod

# Get data from builder container
COPY --from=builder /app/.next ./.next

# Create user with permissions
RUN adduser --disabled-password verdi_front
RUN chown -R verdi_front ./
USER verdi_front

CMD [ "yarn", "start" ]